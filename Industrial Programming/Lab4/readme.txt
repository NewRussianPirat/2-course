  Использование стандартные методы обработки строк из классов String, StringBuffer
(StringBuilder более новый), StringTokenizer и метод String.format.

  Общее задание
1. Запрашивает две строки и целое число P для поиска.
Первая строка содержит лексемы, состоящие из любых символов, которые можно ввести с
клавиатуры, например, числа.
Вторая строка содержит символы разделители (1 разделитель - 1 символ, но между лексемами
может стоять > 1 разделителя и разные разделители).
2. StringTokenizer использовать, если между лексемами стоит > 1 разделителя и разные
разделители). String.Split – если только всего один разделитель и по одному разделителю между
лексемами.
3. Вывод чисел, осуществлять с помощью метода String.format.
4. Использовать методы :
Для строк String: format, charAt, getChars, Split, Remove, Substring, Replace, IndexOf, LastIndexOf
Для строк StringBuffer: delete, insert, reverse
5. Для поиска чисел не из 10 с\с использовать перегруженный метод Integer.parseInt.
6. Использовать Collections. Добавить лексемы в ArrayList. Отсортировать лексемы,
используя лямбда-выражение: по наличию в палиндроме среднего одиночного символа
7. Обработку регулярных выражений можно использовать.
  Индивидуальные задания
Разбить первую строку на лексемы (используя разделители из второй строки), определить в ней
целые числа 10-й с\с. Числа записать в новый отдельные массив. Среди лексем не являющихся
числами, найти лексемы являющиеся палиндромами. Найти число Р(если есть, то должно совпадать
с лексемой), вывести позицию в изначальной строке. Добавить в строку случайное число до числа Р
или в начало строки (если нет P). Подстроку, заключенные в круглые скобки - удалить из строки. Все
результаты сформировать в строки и с помощью String.format и вывести.
